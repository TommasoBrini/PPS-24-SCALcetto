name: Scala CI + Release

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    strategy:
      matrix:
        os: [ ubuntu-22.04, windows-2022, macos-14 ]
        java-version: [ 17, 21 ]
    runs-on: ${{ matrix.os }}
    concurrency:
      group: build-${{ github.workflow }}-${{ matrix.os }}-${{ matrix.java-version }}-${{ matrix.java-distribution }}-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4.2.2
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'
          cache: 'sbt'
      - name: Install SBT on macOS
        if: runner.os == 'macOS'
        run: brew install sbt
      - name: Run tests
        run: sbt test

  check-code-formatting:
      needs: build-test
      runs-on: ubuntu-22.04
      steps:
        - uses: actions/checkout@v4.2.2
        - name: Set up JDK 21
          uses: actions/setup-java@v3
          with:
            java-version: '21'
            distribution: 'temurin'
            cache: 'sbt'
        - name: Check scalafmt format
          run: sbt scalafmtCheckAll

  release:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install semantic-release
        run: npm install -g semantic-release @semantic-release/git @semantic-release/changelog @semantic-release/commit-analyzer @semantic-release/release-notes-generator

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: semantic-release
